
" coc-todolist
call SpaceVim#custom#SPCGroupName(['a', 't'], '+ToDo List')
call SpaceVim#custom#SPC('nnoremap', ['a', 't', 'a'], 'CocCommand todolist.create', 'create todo task', 1)

call SpaceVim#custom#SPCGroupName(['o'], '+Coc')

call SpaceVim#custom#SPCGroupName(['o', 'c'], '+Coc Config')
call SpaceVim#custom#SPC('nnoremap', ['o', 'c', 'f'], 'CocConfig', 'open config', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'c', 'l'], 'CocLocalConfig', 'open local config', 1)

call SpaceVim#custom#SPC('nnoremap', ['o', 's'], ':CocSearch ', 'Coc Search', 0)

" coc-lists
call SpaceVim#custom#SPC('nnoremap', ['o', 'L'], 'CocList', 'Coc List', 1)
call SpaceVim#custom#SPCGroupName(['o', 'l'], '+List')
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'c'], 'CocList commands', 'search commands', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'd'], 'CocList diagnostics', 'search diagnostics', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'e'], 'CocList extensions', 'search extensions', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'f'], 'CocList mru', 'search mru files', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'F'], 'CocList buffers', 'search buffers', 1)

call SpaceVim#custom#SPC('nnoremap', ['o', 'l', '/'], 'CocList grep', 'grep text from current cwd', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'l'], 'CocList lines', 'search lines by regex patterns', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'L'], 'CocList location', 'last jump locations', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'm'], 'CocList marketplace', 'search marketplace', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'O'], 'CocList words', 'search word in current buffer', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'b'], 'CocList outline', 'symbols in the current buffer', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'B'], 'CocList symbol', 'symbols in the workspace', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'p'], 'CocList projects', 'list projects', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'r'], 'CocListResume', 'reopen list', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 's'], 'CocList snippets', 'search snippets for current filetype', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'S'], 'CocList sources', 'search sources for current filetype', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 't'], 'CocList todolist', 'list ToDo tasks', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'T'], 'CocList todolist', 'list ToDo tasks', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'v'], 'CocList services', 'list lsp service', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'w'], 'CocList windows', 'list windows of vim', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'y'], 'CocList -A --normal yank', 'list yank', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'j'], 'CocNext', 'Invoke for next item', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'k'], 'CocPrev', 'Invoke for previe item', 1)

" coc-list: git
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'gs'], 'CocList --normal gstatus', 'list git status', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'l', 'gc'], 'CocList --normal gstatus', 'list git status', 1)

" coc diagnostic
" call SpaceVim#custom#SPCGroupName(['o', 'd'], '+Diagnostic')
call SpaceVim#custom#SPC('nnoremap', ['e', 'l'], 'CocDiagnostics', 'list diagnostics', 1)
call SpaceVim#custom#SPC('nnoremap', ['e', 'j'], '<Plug>(coc-diagnostic-next)', 'jump to next position', 0)
call SpaceVim#custom#SPC('nnoremap', ['e', 'k'], '<Plug>(coc-diagnostic-prev)', 'jump to previous position', 0)
call SpaceVim#custom#SPC('nnoremap', ['e', 'J'], '<Plug>(coc-diagnostic-next-error)', 'jump to next error position', 0)
call SpaceVim#custom#SPC('nnoremap', ['e', 'K'], '<Plug>(coc-diagnostic-prev-error)', 'jump to previous error position', 0)

" coc-explorer
call SpaceVim#custom#SPCGroupName(['o', 'e'], '+Explorer')
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'a'], 'Files', 'Open File Search', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'c'], 'CocCommand explorer --preset cocConfig', 'Open Coc Config', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'd'], 'CocCommand explorer --preset dotfiles', 'Open dotfiles', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'e'], 'CocCommand explorer', 'Open File Explorer', 1)
" call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'r'], "call CocAction('runCommand', 'explorer.doAction', 'closest', ['reveal:0'], [['relative', 0, 'file']])", 'Reveal on File Explorer', 1)

autocmd BufEnter,BufWinEnter * call SetCursorLineHighlight()

function SetCursorLineHighlight() abort
  let i = index(['coc-explorer'], &ft)
  if i >= 0
    hi CursorLine ctermbg=236 guibg=#33557E
  else
    hi CursorLine ctermbg=236 guibg=#073642
  endif
endfunction

let s:width = float2nr(str2float(&columns) * 0.9)
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'f'], 'CocCommand explorer --preset floating --floating-width '.s:width, 'Open Popup File Explorer', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'l'], 'CocList explPresets', 'List Explorer Presets', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'e', 'v'], 'CocCommand explorer --preset .vim', 'Open Vim Config', 1)

" coc-prettier
" command! -nargs=0 Prettier :CocCommand prettier.formatFile
call SpaceVim#custom#SPCGroupName(['o', 'f'], '+Format')
call SpaceVim#custom#SPC('nnoremap', ['o', 'f', 'f'], 'CocCommand prettier.formatFile', 'Format current file', 1)
call SpaceVim#custom#SPC('nnoremap', ['o', 'f', 's'], '<Plug>(coc-format-selected)', 'Format selected code', 0)

" coc-floatinput
call SpaceVim#custom#SPCGroupName(['o', 'i'], '+Floatinput')
call SpaceVim#custom#SPC('nnoremap', ['o', 'i', ':'], '<Plug>(coc-floatinput-command)', 'Float Input Command', 0)
call SpaceVim#custom#SPC('nnoremap', ['o', 'i', 'c'], '<Plug>(coc-floatinput-coc-command)', 'Float Input CocCommand', 0)
call SpaceVim#custom#SPC('nnoremap', ['o', 'i', 'r'], '<Plug>(coc-floatinput-rename)', 'Float Rename', 0)

" autocmd ColorScheme *
      " \ hi CocHelperNormalFloatBorder guifg=#dddddd guibg=#575B54
      " \ | hi CocHelperNormalFloat guibg=#575B54

" coc-vimlsp
let g:markdown_fenced_languages = [
      \ 'vim',
      \ 'help'
      \]

" coc-git
" call SpaceVim#custom#SPCGroupName(['o', 'g'], '+Git')
call SpaceVim#custom#SPC('nnoremap', ['g', 'j'], '<Plug>(coc-git-nextconflict)', 'Go to next conflict', 0)
call SpaceVim#custom#SPC('nnoremap', ['g', 'k'], '<Plug>(coc-git-prevconflict)', 'Go to previous conflict', 0)
call SpaceVim#custom#SPC('nnoremap', ['g', '['], '<Plug>(coc-git-nextchunk)', 'Go to next chunk', 0)
call SpaceVim#custom#SPC('nnoremap', ['g', ']'], '<Plug>(coc-git-prevchunk)', 'Go to previous chunk', 0)

" coc-project & coc-bookmark
call SpaceVim#custom#SPCGroupName(['o', 'p'], '+Project & Bookmark')
call SpaceVim#custom#SPC('nnoremap', ['o', 'p', 'a'], 'CocCommand project-manager.Create', 'Create Project', 1)


" coc-golang
autocmd BufWritePre *.go :silent call CocAction('runCommand', 'editor.action.organizeImport')
" TODO: keymap
" autocmd FileType go nmap gtj :CocCommand go.tags.add json<cr>
" autocmd FileType go nmap gty :CocCommand go.tags.add yaml<cr>
" autocmd FileType go nmap gtx :CocCommand go.tags.clear<cr>


