#!/usr/bin/env zsh

local ipOpts
local stateOpts
local protocolOpts
local portOpts
local help

zmodload zsh/zutil
zparseopts -D -F -K -- \
  {h,-help}=help \
  -ip:=ipOpts \
  -state:=stateOpts \
  -protocol:=protocolOpts \
  -port:=portOpts \
  {v,-ip-ver}:=ipVersionOpts || return 1

local usage=(
  "port [-h|--help]"
  "port [--ip-ver 4|6] [--ip <ip>] [--protocol <protocol>[ --state <state>]] [--port <port>] [<query-string>]"
)

[[ -z "$help" ]] || { print -l $usage && return }

local ip=$ipOpts[-1]
local state=$stateOpts[-1]
local protocol=$protocolOpts[-1]
local port=$portOpts[-1]
local ipVersion=$ipVersionOpts[-1]

debug "port" "ip: $ip state: $state protocol: $protocol port: $port ipVersion: $ipVersion"

if [[ $ipVersion != "4" ]]&&[[ $ipVersion != "6" ]]&&[[ -n $ipVersion ]]; then
  echo "IP version should be 4(IPv4) or 6(IPv6)!"
fi

local s=${1}

local sOpts
if [[ -n $state ]]; then
  if [[ -z $protocol ]]; then
    echo "Please specify both state and protocol!"
    return
  else
    sOpts="-s $protocol:$state"
  fi
fi

local iOpts="-i $ipVersion"
if [[ -n protocol ]]; then
  iOpts+="$protocol"
fi
if [[ -n $ip ]]; then
  iOpts+="@$ip"
fi
if [[ -n $port ]]; then
  iOpts+=":$port"
fi

local cmd="lsof -Pn ${=iOpts} ${=sOpts} 2> /dev/null"

if [[ $System == 'Linux' ]]; then
  cmd="sudo $cmd"
fi
eval $cmd | fzf --query=$s --header-lines=1 --height=100%
